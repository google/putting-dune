# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: putting_dune/putting_dune.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from tensorflow.core.framework import tensor_pb2 as tensorflow_dot_core_dot_framework_dot_tensor__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1fputting_dune/putting_dune.proto\x12\x13putting_dune.google\x1a&tensorflow/core/framework/tensor.proto\"\x1f\n\x07Point2D\x12\t\n\x01x\x18\x01 \x01(\x02\x12\t\n\x01y\x18\x02 \x01(\x02\"M\n\x04\x41tom\x12\x15\n\ratomic_number\x18\x01 \x01(\x05\x12.\n\x08position\x18\x02 \x01(\x0b\x32\x1c.putting_dune.google.Point2D\"6\n\nAtomicGrid\x12(\n\x05\x61toms\x18\x01 \x03(\x0b\x32\x19.putting_dune.google.Atom\"\x81\x01\n\x0b\x42\x65\x61mControl\x12.\n\x08position\x18\x01 \x01(\x0b\x32\x1c.putting_dune.google.Point2D\x12\x1a\n\x12\x64well_time_seconds\x18\x02 \x01(\x02\x12\x12\n\nvoltage_kv\x18\x03 \x01(\x02\x12\x12\n\ncurrent_na\x18\x04 \x01(\x02\"\x86\x01\n\x0b\x46ieldOfView\x12:\n\x14lower_left_angstroms\x18\x01 \x01(\x0b\x32\x1c.putting_dune.google.Point2D\x12;\n\x15upper_right_angstroms\x18\x02 \x01(\x0b\x32\x1c.putting_dune.google.Point2D\"\x9d\x02\n\x15MicroscopeObservation\x12-\n\x04grid\x18\x01 \x01(\x0b\x32\x1f.putting_dune.google.AtomicGrid\x12-\n\x03\x66ov\x18\x02 \x01(\x0b\x32 .putting_dune.google.FieldOfView\x12\x32\n\x08\x63ontrols\x18\x03 \x03(\x0b\x32 .putting_dune.google.BeamControl\x12\x1c\n\x14\x65lapsed_time_seconds\x18\x04 \x01(\x02\x12&\n\x05image\x18\x05 \x01(\x0b\x32\x17.tensorflow.TensorProto\x12,\n\x0blabel_image\x18\x06 \x01(\x0b\x32\x17.tensorflow.TensorProto\"N\n\nTrajectory\x12@\n\x0cobservations\x18\x01 \x03(\x0b\x32*.putting_dune.google.MicroscopeObservation\"\xdc\x03\n\nTransition\x12\x34\n\x0bgrid_before\x18\x01 \x01(\x0b\x32\x1f.putting_dune.google.AtomicGrid\x12\x33\n\ngrid_after\x18\x02 \x01(\x0b\x32\x1f.putting_dune.google.AtomicGrid\x12\x34\n\nfov_before\x18\x03 \x01(\x0b\x32 .putting_dune.google.FieldOfView\x12\x33\n\tfov_after\x18\x04 \x01(\x0b\x32 .putting_dune.google.FieldOfView\x12\x32\n\x08\x63ontrols\x18\x05 \x03(\x0b\x32 .putting_dune.google.BeamControl\x12-\n\x0cimage_before\x18\x06 \x01(\x0b\x32\x17.tensorflow.TensorProto\x12,\n\x0bimage_after\x18\x07 \x01(\x0b\x32\x17.tensorflow.TensorProto\x12\x33\n\x12label_image_before\x18\x08 \x01(\x0b\x32\x17.tensorflow.TensorProto\x12\x32\n\x11label_image_after\x18\t \x01(\x0b\x32\x17.tensorflow.TensorProto\"b\n\x05\x44rift\x12,\n\x06jitter\x18\x01 \x03(\x0b\x32\x1c.putting_dune.google.Point2D\x12+\n\x05\x64rift\x18\x02 \x01(\x0b\x32\x1c.putting_dune.google.Point2D\"}\n\x1aLabeledAlignmentTrajectory\x12\x33\n\ntrajectory\x18\x01 \x01(\x0b\x32\x1f.putting_dune.google.Trajectory\x12*\n\x06\x64rifts\x18\x02 \x03(\x0b\x32\x1a.putting_dune.google.Drift')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'putting_dune.putting_dune_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _POINT2D._serialized_start=96
  _POINT2D._serialized_end=127
  _ATOM._serialized_start=129
  _ATOM._serialized_end=206
  _ATOMICGRID._serialized_start=208
  _ATOMICGRID._serialized_end=262
  _BEAMCONTROL._serialized_start=265
  _BEAMCONTROL._serialized_end=394
  _FIELDOFVIEW._serialized_start=397
  _FIELDOFVIEW._serialized_end=531
  _MICROSCOPEOBSERVATION._serialized_start=534
  _MICROSCOPEOBSERVATION._serialized_end=819
  _TRAJECTORY._serialized_start=821
  _TRAJECTORY._serialized_end=899
  _TRANSITION._serialized_start=902
  _TRANSITION._serialized_end=1378
  _DRIFT._serialized_start=1380
  _DRIFT._serialized_end=1478
  _LABELEDALIGNMENTTRAJECTORY._serialized_start=1480
  _LABELEDALIGNMENTTRAJECTORY._serialized_end=1605
# @@protoc_insertion_point(module_scope)
